#include <iostream>
#include <map>
#include <QStringList>
#include <QDir>
#include <QTextStream>
#include <QXmlStreamWriter>

#include "model/board.h"

int main( int argc, char** argv )
{
    QString pattern( "level*.txt" );
    int numberStartOffset = pattern.indexOf( QChar('*') );
    QDir dir( "maps", pattern, QDir::Unsorted, QDir::Files|QDir::NoDotAndDotDot|QDir::Readable );
    QStringList mapFiles = dir.entryList();

    std::map<int,int> numbers;
    int index = 0;
    for( const QString& mapFile : mapFiles ) {
        bool ok;
        int number = mapFile.mid( numberStartOffset, mapFile.length()-numberStartOffset-4 ).toInt( &ok );
        if ( ok ) {
            numbers.insert( { number, index } );
        } else {
            std::cerr << "** skipping " << qPrintable(mapFile) << std::endl;
        }
        ++index;
    }

    QTextStream stream(stdout);
    QXmlStreamWriter xml;
    xml.setAutoFormatting(true);
    xml.setDevice( stream.device() );

    xml.writeStartDocument();
    if ( argc > 0 ) {
        QString comment( "Autogenerated by " );
        comment += argv[0];
        xml.writeComment( comment );
    }
    xml.writeStartElement( "levels" );
    for( auto it : numbers ) {
        Board board;
        if ( board.load( "maps/" + mapFiles.at(it.second), it.first ) ) {
            xml.writeStartElement( "level" );
            xml.writeAttribute("n", QString::number(it.first) );
            xml.writeAttribute("w", QString::number(board.getLowerRight().mCol+1) );
            xml.writeAttribute("h", QString::number(board.getLowerRight().mRow+1) );
            xml.writeEndElement();
        } else {
            std::cerr << "** couldn't load " << qPrintable(mapFiles.at(it.second)) << std::endl;
        }
    }
    xml.writeEndElement();

    xml.writeEndDocument();
}
